---
 - name: Create a security group
   local_action: 
        module: ec2_group
        name: "{{ ec2_security_group }}"
        description: Security Group for django demo 
        region: "{{ ec2_region }}"
        rules:
          - proto: tcp
            from_port: 22
            to_port: 22
            cidr_ip: 0.0.0.0/0
          - proto: tcp
            from_port: 80
            to_port: 80
            cidr_ip: 0.0.0.0/0
          - proto: tcp
            from_port: 443
            to_port: 443
            cidr_ip: 0.0.0.0/0
        rules_egress:
          - proto: all
            cidr_ip: 0.0.0.0/0
   register: basic_firewall

 - name: Provision EC2 Instances
   ec2:
     key_name: "{{ ec2_keypair }}"
     group: "{{ ec2_security_group }}"
     instance_type: "{{ ec2_instance_type }}"
     image: "{{ ec2_image }}"
     vpc_subnet_id: "{{ ec2_subnet_ids|random }}"
     region: "{{ ec2_region }}"
     instance_tags: '{"Name":"{{ec2_tag_Name}}","Type":"{{ec2_tag_Type}}","Environment":"{{ec2_tag_Environment}}"}'
     assign_public_ip: yes
     wait: true
     count: 1
   register: ec2

 - debug: var=item
   with_items: "{{ ec2.instances }}"

 - add_host: name={{ item.public_ip }} >
             groups=tag_Type_{{ec2_tag_Type}},tag_Environment_{{ec2_tag_Environment}}
             ec2_region={{ec2_region}} 
             ec2_tag_Name={{ec2_tag_Name}}
             ec2_tag_Type={{ec2_tag_Type}}
             ec2_tag_Environment={{ec2_tag_Environment}}
             ec2_ip_address={{item.public_ip}}
   with_items: "{{ ec2.instances }}"

 - name: Wait for the instances to boot
   wait_for: host={{item.public_ip}} port=22 delay=60 timeout=320 state=started
   with_items: "{{ ec2.instances }}"
